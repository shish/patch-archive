--- clean/xclannad/xlovesys.cc	2005-04-06 06:04:06.000000000 +0100
+++ shish/xclannad/xlovesys.cc	2005-04-13 00:19:43.703880120 +0100
@@ -1,6 +1,6 @@
-#define ROOTPATH "/mnt/KEY/CLANNAD"
+// #define ROOTPATH "/mnt/KEY/CLANNAD"
 // #define ROOTPATH "/home/uenok/pb"
-#define FONT "msgothic.ttc"
+// #define FONT "msgothic.ttc"
 	/* kochi-mincho-subst.ttf あるいは -*-*-*-r-*--24-*-*-*-*-*-jisx0208.1983-* など */
 	/* TrueType Font は /usr/X11R6/lib/X11/fonts/TrueType/ などに存在する必要がある */
 
@@ -13,6 +13,8 @@
 
 #include<SDL.h>
 #include<vector>
+#include<getopt.h>
+#include<sys/stat.h>
 
 #include"system/file.h"
 #include"system/system_config.h"
@@ -24,23 +26,83 @@
 #include"scn2k/scn2k.h"
 #include"scn2k/scn2k_impl.h"
 
-int main(void) {
+int main(int argc, char *argv[]) {
 	AyuSysConfig config;
+	int opt = 0, end = 0;
+	char cdromDevice[64] = "/dev/cdrom";
+	char rootPath[1024]  = "/mnt/KEY/CLANNAD";
+	char font[1024]      = "msgothic.ttc";
+	struct stat buffer;
+	Uint32 videoOptions  = SDL_HWSURFACE;
+
+	while(1) {
+		opt = getopt(argc, argv, "fdt:c:r:vh?");
+		if(opt == -1) {break;}
+
+		switch(opt) {
+			case 'f':
+				videoOptions |= SDL_FULLSCREEN;
+				break;
+			case 'd':
+				videoOptions |= SDL_DOUBLEBUF;
+				break;
+			case 't':
+				strncpy(font, optarg, 1023);
+				break;
+			case 'c':
+				strncpy(cdromDevice, optarg, 63);
+				break;
+			case 'r':
+				strncpy(rootPath, optarg, 1023);
+				break;
+			case 'v':
+				// FIXME: "VERSION" undeclared?
+				// printf("xclannad %s\n", VERSION);
+				printf("xclannad 0.05e\n");
+				end = 1;
+				break;
+			case 'h':
+			case '?':
+				printf("\nUsage: %s [OPTIONS]\n\n", argv[0]);
+				printf("  -f    : full screen mode\n");
+				printf("  -d    : double buffer mode\n");
+				printf("  -t    : set font (typeface)\n");
+				printf("  -c    : set CD-ROM device (default /dev/cdrom)\n");
+				printf("  -r    : set root path (default /mnt/KEY/CLANNAD)\n");
+				printf("  -v    : show version and exit\n");
+				printf("  -h -? : show help and exit\n\n");
+				end = 1;
+				break;
+		}
+	}
+	if(end == 1) return 0;
+
 	printf("%s\n",setlocale(LC_ALL,""));
-	file_searcher.InitRoot(ROOTPATH);
+	file_searcher.InitRoot(rootPath);
 	config.LoadInitFile();
+	
 int deal=0;
 const int* s = config.GetParamArray("#SHAKE.001",deal);
 int i; for (i=0; i<deal; i++) { printf("%d, ",s[i]);}
 printf("shake end\n");
 
-	SetFont(FONT);
+	if(stat(font, &buffer) == -1) {
+		fprintf(stderr, "Font '%s' not found\n", font);
+		return 1;
+	}
+	SetFont(font);
 
 	MuSys mu(config);
 	mu.InitMusic();
+	mu.SetCDROMDevice(cdromDevice);
+
+	if(SDL_Init(SDL_INIT_VIDEO)) {
+		printf("Unable to init SDL: %s\n", SDL_GetError());
+	        return 1;
+	}
+	atexit(SDL_Quit);
 	
-	SDL_Init(SDL_INIT_VIDEO);
-	SDL_SetVideoMode(640, 480, 0, SDL_HWSURFACE /*| SDL_FULLSCREEN */);
+	SDL_SetVideoMode(640, 480, 0, videoOptions);
 	// SDL_SetVideoMode(800, 600, 0, SDL_HWSURFACE /*| SDL_FULLSCREEN */);
 	{
 		System::Main main;
